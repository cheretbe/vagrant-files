---

- name: Domain controller provision
  hosts: all

  tasks:
    - name: Print host information
      debug:
        msg: "{{ ansible_fqdn }}: {{ ansible_distribution }} {{ ansible_distribution_version}}"

    - name: Set DNS parameters for network interfaces
      win_command: powershell -executionpolicy bypass -file c:\vagrant\provision\interfaces_dns_settings.ps1
      changed_when: false

    - name: Install AD Services feature
      win_feature:
        name: AD-Domain-Services
        include_management_tools: yes
        include_sub_features: yes
        state: present
      register: result

    - name: Create 'dummy.local' domain
      win_domain:
        dns_domain_name: dummy.local
        safe_mode_password: "`1q"
      register: result

    - name: Set DNS server parameters
      win_command: powershell -executionpolicy bypass -file c:\vagrant\provision\dns_server_settings.ps1
      changed_when: false

    # - name: Set DNS server on all network adapters
    #   win_dns_client:
    #     adapter_names: '*'
    #     ipv4_addresses: [192.168.199.10]

    - name: Reboot after domain creation
      win_reboot:
        msg: "Server config in progress; rebooting..."
      when: result.reboot_required

    - name: Wait for AD services to become available
      win_shell: Get-ADComputer 'dc'
      register: get_ad_computer_result
      changed_when: false
      until: get_ad_computer_result.rc == 0
      retries: 40
      delay: 30

    - name: Add admin user 'test@dummy.local'
      win_domain_user:
        name: test
        password: "`1q`1q`1q"
        state: present
        groups:
          - Domain Admins

    - name: Check if custom top-level OU exists
      win_shell: Get-ADOrganizationalUnit -Identity 'OU=ou_test,DC=dummy,DC=local'
      register: test_ou
      changed_when: false
      failed_when: false
      # ignore_errors: true

    - name: Check if custom computers OU exists
      win_shell: Get-ADOrganizationalUnit -Identity 'OU=computers_test,OU=ou_test,DC=dummy,DC=local'
      register: computers_ou
      changed_when: false
      failed_when: false
      # ignore_errors: true

    # - debug: var=computers_ou

    - name: Create custom top-level OU
      win_shell: New-ADOrganizationalUnit -Name 'ou_test' -Path 'DC=dummy,DC=local'
      when: test_ou.rc != 0

    - name: Create custom computers OU
      win_shell: New-ADOrganizationalUnit -Name 'computers_test' -Path 'OU=ou_test,DC=dummy,DC=local'
      when: computers_ou.rc != 0

    - name: Update Ansible host facts
      setup:

    - name: Print host information
      debug:
        msg: "{{ ansible_fqdn }}: {{ ansible_distribution }} {{ ansible_distribution_version}}"
