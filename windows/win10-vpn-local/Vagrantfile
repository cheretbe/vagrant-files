require File.expand_path("../../../lib/host_functions.rb", __FILE__)

local_settings = read_local_settings([
  {"name" => "purevpn_server", "default" => "nl2-ovpn-udp.pointtoserver.com"},
  {"name" => "purevpn_protocol", "default" => "udp"},
  {"name" => "purevpn_user"},
  {"name" => "purevpn_password"}
])

Vagrant.configure("2") do |config|
  config.vm.define :"router" do |router|
    router.vm.box = "ubuntu/focal64"
    router.vm.hostname = "router"
    router.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
      vb.customize ["modifyvm", :id, "--uart1", "off"]
      vb.customize ["modifyvm", :id, "--uartmode1", "disconnected"]
    end

    router.vm.network "private_network", ip: "192.168.80.11", virtualbox__intnet: "vagrant-win-vpn"
    router.vm.provision "shell", name: "Enable cleartext passwords for SSH",
      keep_color: true,
      inline: <<-SHELL
        set -euo pipefail
        sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
        systemctl restart sshd
      SHELL
  end

  config.vm.define "win10" do |win10|
    win10.vm.box = "cheretbe/win10_gui"

    win10.vm.network "private_network", ip: "192.168.80.12", virtualbox__intnet: "vagrant-win-vpn"

    win10.vm.provision "file", source: "provision/win_setup_vpn.ps1",
      destination: "c:\\users\\vagrant\\win_setup_vpn.ps1"

    win10.vm.provision "shell", path: "provision/win_provision.ps1",
      args: "-taskUserPassword #{ENV['AO_DEFAULT_VAGRANT_PASSWORD']} -vpnGateway 192.168.80.11"

    win10.vm.provision "shell", name: "Force default route fix",
        run: "always", inline: <<-SHELL
      # [enum]::GetValues([Microsoft.PowerShell.Cmdletization.GeneratedTypes.ScheduledTask.StateEnum])
      if ((Get-ScheduledTask -TaskName "Vagrant - Fix default route").State -ne "Running") {
        Write-Output "Executing scheduled task 'Vagrant - Fix default route'"
        Start-ScheduledTask -TaskName "Vagrant - Fix default route"
      }
    SHELL
  end

  config.vm.define :"ansible-controller" do |ansible_controller|
    ansible_controller.vm.box = "cheretbe/ansible-controller"
    ansible_controller.vm.hostname = "ansible-controller"
    ansible_controller.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
    end
    ansible_controller.vm.network "private_network", ip: "192.168.80.10", virtualbox__intnet: "vagrant-win-vpn"

    ansible_controller.vm.provision "ansible_local" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.install = false
      ansible.playbook = "provision/router_provision.yml"
      ansible.inventory_path = "provision/inventory.yml"
      ansible.limit = "router"
      ansible.extra_vars = {
        purevpn_server:   local_settings.purevpn_server,
        purevpn_protocol: local_settings.purevpn_protocol,
        purevpn_user:     local_settings.purevpn_user,
        purevpn_password: local_settings.purevpn_password,
        lan_if_ipv4: "192.168.80.11",
      }
    end

    ansible_controller.vm.provision "ansible_local" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.install = false
      ansible.playbook = "provision/win_provision.yml"
      ansible.extra_vars = {
        ansible_password: "#{ENV['AO_DEFAULT_VAGRANT_PASSWORD']}",
      }
      ansible.inventory_path = "provision/inventory.yml"
      ansible.limit = "win10"
    end
  end
end
