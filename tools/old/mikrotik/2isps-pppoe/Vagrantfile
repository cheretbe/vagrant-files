# -*- mode: ruby -*-
# vi: set ft=ruby :

require_relative "../provision/common.rb"
require_relative "../../host-scripts/common.rb"

Vagrant.configure("2") do |config|
  config.vm.define :client, autostart: false do |client|
    client.vm.box = "ubuntu/xenial64"
    client.vm.hostname = "client"
    client.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
      # Prevent 'ubuntu-xenial-16.04-cloudimg-console.log' file creation
      # https://groups.google.com/forum/#!topic/vagrant-up/eZljy-bddoI
      vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
      # [!] Debug share
      # vb.customize ["sharedfolder", "add", :id, "--name", "debug", "--hostpath",
      #   File.expand_path("../..", File.dirname(__FILE__)), "--automount"]
    end
    client.vm.synced_folder ".", "/home/vagrant/sync", disabled: true
    client.vm.network "private_network", type: "dhcp", virtualbox__intnet: "vagrant-lan"

    client.vm.provision "shell", path: "../../linux/provision/ubuntu-provision.sh", keep_color: true
    client.vm.provision "shell", path: "../../linux/provision/vb-guest-additions-provision.sh", keep_color: true
    client.vm.provision "file", source: "client_provision.sh", destination: "client_provision.sh"

    # Using these + custom_provision_enabled instead of :provision until the
    # following issue is resolved:
    # https://github.com/hashicorp/vagrant/issues/9846
    client.trigger.after :up, :provision, :reload, :resume do |trigger|
      trigger.ruby do |env,machine|
        if machine.custom_provision_enabled then
          nic_macs = get_vb_nic_mac_address_list(machine)
          system("vagrant", "ssh", "#{machine.name}", "--",
            "/usr/bin/sudo /bin/bash /home/vagrant/client_provision.sh " +
            "#{nic_macs[0]} #{nic_macs[1]}"
          )
          if $?.exitstatus > 0 then raise "Error in client_provision.sh" end
        end
      end
    end
  end

  config.vm.define :mt_router do |mt_router|
    mt_router.vm.box = "cheretbe/routeros"
    # mt_router.vm.box = "mt-test"
    mt_router.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
    end
    mt_router.vm.network "private_network", virtualbox__intnet: "vagrant-isp1", auto_config: false
    mt_router.vm.network "private_network", virtualbox__intnet: "vagrant-isp2", auto_config: false
    mt_router.vm.network "private_network", virtualbox__intnet: "vagrant-lan", auto_config: false

    mt_router.trigger.after :up, :provision, :reload, :resume do |trigger|
      trigger.ruby do |env,machine|
        if machine.custom_provision_enabled then
          # [!] 0-based vm_NIC_mac_addresses array should be initialized at this point
          # by the original Vagrantfile
          system "vagrant ssh #{machine.name} -- '" +
            ":global isp1MACaddr \"" + machine.vm_NIC_mac_addresses[2] + "\"; " +
            ":global isp2MACaddr \"" + machine.vm_NIC_mac_addresses[3] + "\"; " +
            ":global lanMACaddr \"" + machine.vm_NIC_mac_addresses[4] + "\"'"
          upload_mikrotik_script(machine, "mt_router_provision.rsc", "mt_router_provision")
          system "vagrant ssh #{machine.name} -- /system script run mt_router_provision"
        end
      end
    end
  end

  config.vm.define :isp1 do |isp1|
    isp1.vm.box = "ubuntu/xenial64"
    isp1.vm.hostname = "isp1"
    isp1.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
      # Prevent 'ubuntu-xenial-16.04-cloudimg-console.log' file creation
      # https://groups.google.com/forum/#!topic/vagrant-up/eZljy-bddoI
      vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
      # [!] Debug share
      vb.customize ["sharedfolder", "add", :id, "--name", "debug", "--hostpath",
        File.expand_path("../..", File.dirname(__FILE__)), "--automount"]
    end
    isp1.vm.synced_folder ".", "/home/vagrant/sync", disabled: true
    isp1.vm.network "private_network", virtualbox__intnet: "vagrant-isp1", auto_config: false
    isp1.vm.network "private_network", virtualbox__intnet: "vagrant-inter_isp", ip: "172.24.0.1"

    isp1.vm.provision "shell", path: "../../linux/provision/ubuntu-provision.sh", keep_color: true
    isp1.vm.provision "shell", path: "../../linux/provision/vb-guest-additions-provision.sh", keep_color: true
    isp1.vm.provision "file", source: "isp1_pppoe_settings.sh", destination: "isp1_pppoe_settings.sh"
    isp1.vm.provision "file", source: "../../linux/provision/pppoe-server-provision.sh",
      destination: "pppoe-server-provision.sh"
    isp1.vm.provision "file", source: "../../linux/provision/quagga_ospf.py",
      destination: "quagga_ospf.py"
    isp1.trigger.after :up, :provision, :reload, :resume do |trigger|
      trigger.ruby do |env,machine|
        if machine.custom_provision_enabled then
          nic_macs = get_vb_nic_mac_address_list(machine)
          system("vagrant", "ssh", "#{machine.name}", "--",
            "/usr/bin/sudo /bin/bash /home/vagrant/pppoe-server-provision.sh " +
            "/home/vagrant/isp1_pppoe_settings.sh #{nic_macs[0]} " +
            "#{nic_macs[1]} #{nic_macs[2]}"
          )
          if $?.exitstatus > 0 then raise "Error in pppoe-server-provision.sh" end
          system("vagrant", "ssh", "#{machine.name}", "--",
            "/usr/bin/sudo /usr/bin/python3 /home/vagrant/quagga_ospf.py " +
            "#{nic_macs[2]} --router-id 172.24.0.1 " +
            "--networks 192.168.51.0/24 172.24.0.0/24"
          )
          if $?.exitstatus > 0 then raise "Error in quagga_ospf.py" end
        end
      end
    end
  end

  config.vm.define :isp2 do |isp2|
    isp2.vm.box = "ubuntu/xenial64"
    isp2.vm.hostname = "isp2"
    isp2.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
      # Prevent 'ubuntu-xenial-16.04-cloudimg-console.log' file creation
      # https://groups.google.com/forum/#!topic/vagrant-up/eZljy-bddoI
      vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
    end
    isp2.vm.synced_folder ".", "/home/vagrant/sync", disabled: true
    isp2.vm.network "private_network", virtualbox__intnet: "vagrant-isp2", auto_config: false
    isp2.vm.network "private_network", virtualbox__intnet: "vagrant-inter_isp", ip: "172.24.0.2"

    isp2.vm.provision "shell", path: "../../linux/provision/ubuntu-provision.sh", keep_color: true
    isp2.vm.provision "shell", path: "../../linux/provision/vb-guest-additions-provision.sh", keep_color: true
    isp2.vm.provision "file", source: "isp2_pppoe_settings.sh", destination: "isp2_pppoe_settings.sh"
    isp2.vm.provision "file", source: "../../linux/provision/pppoe-server-provision.sh",
      destination: "pppoe-server-provision.sh"
    isp2.vm.provision "file", source: "../../linux/provision/quagga_ospf.py",
      destination: "quagga_ospf.py"
    isp2.trigger.after :up, :provision, :reload, :resume do |trigger|
      trigger.ruby do |env,machine|
        if machine.custom_provision_enabled then
          nic_macs = get_vb_nic_mac_address_list(machine)
          system("vagrant", "ssh", "#{machine.name}", "--",
            "/usr/bin/sudo /bin/bash /home/vagrant/pppoe-server-provision.sh " +
            "/home/vagrant/isp2_pppoe_settings.sh #{nic_macs[0]} " +
            "#{nic_macs[1]} #{nic_macs[2]}"
          )
          if $?.exitstatus > 0 then raise "Error in pppoe-server-provision.sh" end
          system("vagrant", "ssh", "#{machine.name}", "--",
            "/usr/bin/sudo /usr/bin/python3 /home/vagrant/quagga_ospf.py " +
            "#{nic_macs[2]} --router-id 172.24.0.2 " +
            "--networks 192.168.52.0/24 172.24.0.0/24"
          )
          if $?.exitstatus > 0 then raise "Error in quagga_ospf.py" end
        end
      end
    end
  end

  config.vm.define :remote_server, autostart: false do |remote_server|
    remote_server.vm.box = "ubuntu/xenial64"
    remote_server.vm.hostname = "remote-server"
    remote_server.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
      # Prevent 'ubuntu-xenial-16.04-cloudimg-console.log' file creation
      # https://groups.google.com/forum/#!topic/vagrant-up/eZljy-bddoI
      vb.customize [ "modifyvm", :id, "--uartmode1", "disconnected" ]
      # [!] Debug share
      # vb.customize ["sharedfolder", "add", :id, "--name", "debug", "--hostpath",
      #   File.expand_path("../..", File.dirname(__FILE__)), "--automount"]
    end
    remote_server.vm.synced_folder ".", "/home/vagrant/sync", disabled: true
    remote_server.vm.network "private_network", virtualbox__intnet: "vagrant-inter_isp",
      ip: "172.24.0.3"

    remote_server.vm.provision "shell", path: "../../linux/provision/ubuntu-provision.sh", keep_color: true
    remote_server.vm.provision "shell", path: "../../linux/provision/vb-guest-additions-provision.sh", keep_color: true
    remote_server.vm.provision "file", source: "../../linux/provision/quagga_ospf.py",
      destination: "quagga_ospf.py"

    remote_server.trigger.after :up, :provision, :reload, :resume do |trigger|
      trigger.ruby do |env,machine|
        if machine.custom_provision_enabled then
          nic_macs = get_vb_nic_mac_address_list(machine)
          system("vagrant", "ssh", "#{machine.name}", "--",
            "/usr/bin/sudo /usr/bin/python3 /home/vagrant/quagga_ospf.py " +
            "#{nic_macs[1]} --router-id 172.24.0.3 " +
            "--networks 172.24.0.0/24"
          )
          if $?.exitstatus > 0 then raise "Error in quagga_ospf.py" end
        end
      end
    end
  end
end
