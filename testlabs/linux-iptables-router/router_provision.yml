---
- name: Router box provision
  hosts: all

  tasks:
    - name: Print host information
      debug:
        msg: "{{ ansible_fqdn }}: {{ ansible_distribution }} {{ ansible_distribution_version}}"

    - name: Install apt packages
      apt:
        name: ["iptables-persistent", "netfilter-persistent"]
        # update_cache: yes
        # # 1 hour
        # cache_valid_time: 3600
      become: yes

    - name: Enable IPv4 forwarding
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: yes
        state: present
        reload: yes
      become: yes

    - name: Get WAN interface name
      set_fact:
        wan_if_name: "{{ item }}"
      loop: "{{ ansible_interfaces }}"
      when: "lookup('vars', 'ansible_' + item).ipv4['address'] == wan_if_ipv4"

    - name: iptables - NAT client connections
      ansible.builtin.iptables:
        table: nat
        chain: POSTROUTING
        source: 192.168.79.0/24
        out_interface: "{{ wan_if_name }}"
        jump: MASQUERADE
        comment: NAT client connections
      become: yes
      notify: Save iptables state

    - name: iptables - Allow SSH from non-WAN interfaces
      ansible.builtin.iptables:
        table: filter
        chain: INPUT
        protocol: tcp
        destination_port: 22
        # Note the '!'
        in_interface: "!{{ wan_if_name }}"
        jump: ACCEPT
        comment: Allow SSH
      become: yes
      notify: Save iptables state

# -A OUTPUT -o lo -j ACCEPT
# -A INPUT -i lo -j ACCEPT
    - name: iptables - Allow loopback connections
      ansible.builtin.iptables:
        table: filter
        chain: INPUT
        in_interface: lo
        jump: ACCEPT
        comment: Allow loopback connections
      become: yes
      notify: Save iptables state

    - name: iptables - Allow established and related connections
      ansible.builtin.iptables:
        table: filter
        chain: INPUT
        ctstate: ESTABLISHED,RELATED
        jump: ACCEPT
        comment: Allow established and related connections
      become: yes
      notify: Save iptables state

    - name: iptables - Set the policy for the INPUT chain to DROP
      ansible.builtin.iptables:
        chain: INPUT
        policy: DROP
      become: yes
      notify: Save iptables state

    - name: iptables - Set the policy for the FORWARD chain to DROP
      ansible.builtin.iptables:
        chain: FORWARD
        policy: DROP
      become: yes
      notify: Save iptables state

  handlers:
    - name: Save iptables state
      community.general.iptables_state:
        state: saved
        path: /etc/iptables/rules.v4
      become: yes
