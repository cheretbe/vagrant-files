Vagrant.configure("2") do |config|

  config.vm.define :"isp" do |isp|
    isp.vm.box = "cheretbe/routeros-long-term"
    isp.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
    end
    isp.vm.network "private_network", virtualbox__intnet: "vagrant-isp", auto_config: false

    isp.vm.provision "routeros_file", name: "Upload provison script",
      source: "isp_provision.rsc", destination: "isp_provision.rsc"
    isp.vm.provision "routeros_command", name: "Provision",
      command: "/import isp_provision.rsc", check_script_error: true
  end

  config.vm.define :"router" do |router|
    router.vm.box = "ubuntu/focal64"
    router.vm.hostname = "router"
    router.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
      vb.customize ["modifyvm", :id, "--uart1", "off"]
      vb.customize ["modifyvm", :id, "--uartmode1", "disconnected"]
    end
    # Temporary fix for this:
    # https://bugs.launchpad.net/ubuntu/+source/virtualbox/+bug/1939168
    router.vbguest.auto_update = true

    router.vm.network "private_network", ip: "192.168.78.2", virtualbox__intnet: "vagrant-isp"
    router.vm.network "private_network", ip: "192.168.79.10", virtualbox__intnet: "vagrant-client"

    router.vm.provision "shell", name: "Network configuration",
      keep_color: true, # privileged: false,
      inline: <<-SHELL
        python3 /vagrant/network_config.py "192.168.78.2/24" "192.168.78.1"
      SHELL
    router.vm.provision "ansible_local" do |ansible|
      ansible.playbook = "router_provision.yml"
      ansible.compatibility_mode = "2.0"
      ansible.install_mode = "pip"
      ansible.pip_install_cmd = "curl https://bootstrap.pypa.io/get-pip.py | sudo python3"
      ansible.extra_vars = {
        "ansible_python_interpreter": "/usr/bin/python3",
        "lan_if_ipv4": "192.168.79.10",
        "wan_if_ipv4": "192.168.78.2"
      }
    end
  end

  config.vm.define :"client" do |client|
    client.vm.box = "ubuntu/focal64"
    client.vm.hostname = "client"
    client.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
      vb.customize ["modifyvm", :id, "--uart1", "off"]
      vb.customize ["modifyvm", :id, "--uartmode1", "disconnected"]
    end
    # Temporary fix for this:
    # https://bugs.launchpad.net/ubuntu/+source/virtualbox/+bug/1939168
    client.vbguest.auto_update = true

    client.vm.network "private_network", ip: "192.168.79.11", virtualbox__intnet: "vagrant-client"

    client.vm.provision "shell", name: "Network configuration",
      keep_color: true, # privileged: false,
      inline: <<-SHELL
        python3 /vagrant/network_config.py "192.168.79.11/24" "192.168.79.10"
      SHELL
    # client.vm.provision "ansible_local" do |ansible|
    #   ansible.playbook = "router_provision.yml"
    #   ansible.compatibility_mode = "2.0"
    #   ansible.install_mode = "pip"
    #   ansible.pip_install_cmd = "curl https://bootstrap.pypa.io/get-pip.py | sudo python3"
    #   ansible.extra_vars = {
    #     "ansible_python_interpreter": "/usr/bin/python3",
    #     "wan_if_ipv4": "192.168.78.2"
    #   }
    # end
  end
end