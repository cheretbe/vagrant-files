require File.expand_path("../../../lib/host_functions.rb", __FILE__)

if not ENV.has_key?('AO_DEFAULT_VAGRANT_PASSWORD')
  abort "This Vagrantfile needs AO_DEFAULT_VAGRANT_PASSWORD environment variable to be defined. Aborting"
end

local_settings = read_local_settings([
  {"name" => "win_memory", "default" => "4096"},
  {"name" => "linux_memory", "default" => "2048"}
])

Vagrant.configure("2") do |config|
  config.vm.define :"ubuntu-focal" do |ubuntu_focal|
    ubuntu_focal.vm.box = "ubuntu/focal64"
    ubuntu_focal.vm.hostname = "ubuntu-focal-vm"
    ubuntu_focal.vm.provider "virtualbox" do |vb|
      vb.memory = local_settings.linux_memory
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
      vb.customize ["modifyvm", :id, "--uart1", "off"]
      vb.customize ["modifyvm", :id, "--uartmode1", "disconnected"]
    end

    ubuntu_focal.vm.network "private_network", virtualbox__intnet: "vagrant-intnet", ip: "192.168.80.31"
    ubuntu_focal.vm.synced_folder "/", "/host"
    ubuntu_focal.vm.synced_folder Dir.home, "/host_home"

    ubuntu_focal.vm.provision "shell", name: "Enable cleartext passwords for SSH",
      keep_color: true,
      inline: <<-SHELL
        set -euo pipefail
        sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
        systemctl restart sshd
      SHELL
  end

  config.vm.define "win10" do |win10|
    win10.vm.box = "cheretbe/win10ltsc2019_ru_64"
    win10.winrm.username = "vagrant"
    win10.winrm.password = "#{ENV['AO_DEFAULT_VAGRANT_PASSWORD']}"
    win10.vm.boot_timeout = 900

    win10.vm.provider "virtualbox" do |vb|
      vb.memory = local_settings.win_memory
      vb.cpus = "2"
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
      vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
    end

    win10.vm.network "private_network", virtualbox__intnet: "vagrant-intnet", ip: "192.168.80.32"
    win10.vm.synced_folder "/", "/host"
    win10.vm.synced_folder Dir.home, "/host_home"
  end

  config.vm.define :"ansible-controller" do |ansible_controller|
    ansible_controller.vm.box = "cheretbe/ansible-controller"
    ansible_controller.vm.hostname = "ansible-controller"
    ansible_controller.vm.provider "virtualbox" do |vb|
      vb.customize ["modifyvm", :id, "--groups", "/__vagrant"]
    end
    ansible_controller.vm.network "private_network", virtualbox__intnet: "vagrant-intnet", ip: "192.168.80.30"

    ansible_controller.vm.provision "ansible_local" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.install = false
      ansible.playbook = "provision/linux_provision.yml"
      ansible.inventory_path = "provision/inventory.yml"
      ansible.limit = "ubuntu-focal"
    end

    ansible_controller.vm.provision "ansible_local" do |ansible|
      ansible.compatibility_mode = "2.0"
      ansible.install = false
      ansible.playbook = "provision/win_provision.yml"
      ansible.extra_vars = {
        ansible_password: "#{ENV['AO_DEFAULT_VAGRANT_PASSWORD']}",
      }
      ansible.inventory_path = "provision/inventory.yml"
      ansible.limit = "win10"
    end
  end

end
