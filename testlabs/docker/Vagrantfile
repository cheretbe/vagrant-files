require File.expand_path("../../../lib/host_functions.rb", __FILE__)

local_settings = read_local_settings_new([
  {"name" => "cpus", "default" => "2"},
  {"name" => "memory", "default" => "2048"},
  {"name" => "common_repo_source", "default" => "master"}
])

Vagrant.configure("2") do |config|
  define_ansible_controller(
    config=config,
    ip="192.168.80.10",
    common_repo_source: local_settings["common_repo_source"]
  )

  config.vm.define :"server" do |server|
    server.vm.box = "ubuntu/jammy64"
    server.vm.hostname = "server"

    apply_standard_settings(config, "server", local_settings)

    server.vm.network "private_network", ip: "192.168.80.11",
      virtualbox__intnet: "vagrant-intnet" #, mac: "080027840F13"
    server.vm.network "forwarded_port", guest: 80, host: 8081
    server.vm.network "forwarded_port", guest: 443, host: 8082

    server.vm.provision "shell", name: "Enable cleartext passwords for SSH",
      keep_color: true,
      inline: <<-SHELL
        set -euo pipefail
        sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
        systemctl restart sshd
      SHELL

    ansible_provision server,
      playbook="server_provision.yml",
      extra_vars: {
        "provision_docker_proxy": ENV["AO_VAGRANT_DOCKER_PROXY"] || false,
        "provision_apt_proxy": ENV["AO_VAGRANT_APT_PROXY"] || false
      }
  end

  config.vm.define :"client" do |client|
    client.vm.box = "ubuntu/jammy64"
    client.vm.hostname = "client"

    apply_standard_settings(config, "server", local_settings)

    client.vm.network "private_network", ip: "192.168.80.12",
      virtualbox__intnet: "vagrant-intnet"
    client.vm.network "forwarded_port", guest: 80, host: 8083
    client.vm.network "forwarded_port", guest: 443, host: 8084

    client.vm.provision "shell", name: "Enable cleartext passwords for SSH",
      keep_color: true,
      inline: <<-SHELL
        set -euo pipefail
        sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config
        systemctl restart sshd
      SHELL

    ansible_provision client,
      playbook="client_provision.yml"
  end
end
