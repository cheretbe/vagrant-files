---

- name: APT proxy settings
  hosts: all
  tasks:
      # TODO: move this and docker proxy config to the shared ansible repo
    - name: APT proxy settings
      when: provision_apt_proxy
      block:
        - name: Create APT proxy settings file
          become: true
          ansible.builtin.copy:
            dest: /etc/apt/apt.conf.d/02proxy
            content: |
              # Generated by Ansible at {{ lookup('pipe', 'hostname -f') }}
              # Any changes made here will be overwritten

              Acquire::http::proxy "http://{{ provision_apt_proxy }}";
              Acquire::ftp::proxy "{{ provision_apt_proxy }}";
            mode: "0644"
            owner: root
            group: root

- name: Setup common parameters
  import_playbook: /opt/ansible-playbooks/linux_server_setup.yml

- name: Docker server box provision
  hosts: all

  tasks:
    # - name: Print host information
    #   debug:
    #     msg: "{{ ansible_fqdn }}: {{ ansible_distribution }} {{ ansible_distribution_version}}"

    # - name: Debug
    #   meta: end_play

    - name: Docker proxy settings
      when: provision_docker_proxy
      block:
        - name: Download proxy CA certificate
          ansible.builtin.get_url:
            url: "http://{{ provision_docker_proxy }}/ca.crt"
            dest: "/usr/share/ca-certificates/docker_registry_proxy.crt"
            mode: "0644"
            owner: root
            group: root
          become: true
          register: provision_ca_file

        - name: Add proxy CA certificate to trusted roots
          blockinfile:
            path: /etc/ca-certificates.conf
            block: |
              docker_registry_proxy.crt
          become: true
          register: provision_ca_list

        - name: Run update-ca-certificates
          become: true
          ansible.builtin.command: /usr/sbin/update-ca-certificates --fresh
          when: provision_ca_file.changed or provision_ca_list.changed

        - name: Make sure systemd drop-in directory for Docker service exists
          ansible.builtin.file:
            path: /etc/systemd/system/docker.service.d
            state: directory
            mode: "0755"
          become: true

        - name: Create systemd drop-in file for Docker service
          become: true
          ansible.builtin.copy:
            dest: /etc/systemd/system/docker.service.d/http-proxy.conf
            content: |
              # Generated by Ansible at {{ lookup('pipe', 'hostname -f') }}
              # Any changes made here will be overwritten

              [Service]
              Environment="HTTP_PROXY=http://{{ provision_docker_proxy }}/"
              Environment="HTTPS_PROXY=http://{{ provision_docker_proxy }}/"
            mode: "0644"
            owner: root
            group: root
          register: provision_drop_in_copy
          notify: Restart docker.service

        - name: Run daemon-reload for systemd
          ansible.builtin.systemd:
            daemon_reload: true
          become: true
          when: provision_drop_in_copy.changed

    - name: Fix multipath daemon error spamming system log
      blockinfile:
        path: /etc/multipath.conf
        block: |
          blacklist {
            device {
              vendor "VBOX"
              product "HARDDISK"
            }
          }
      become: true
      notify: Restart multipath daemon

    - include_role: name="/opt/ansible-playbooks/docker-ce"
      vars:
        docker_ce_users: ["vagrant"]

  handlers:
    - name: Restart multipath daemon
      ansible.builtin.systemd:
        name: multipathd
        state: restarted
      become: true

    - name: Restart docker.service
      ansible.builtin.systemd:
        name: docker.service
        state: restarted
      become: true
